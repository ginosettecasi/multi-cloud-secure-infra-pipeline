name: Multi-Cloud Secure IaC Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  terraform-aws:
    name: 🚀 Deploy AWS Infrastructure
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🧪 Run Checkov - IaC Security Scan
        uses: bridgecrewio/checkov-action@master
        with:
          directory: terraform/aws
        continue-on-error: true

      - name: 🧪 Run Snyk IaC Scan
        uses: snyk/actions/iac@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          file: terraform/aws
          args: --severity-threshold=medium --sarif-file-output=snyk.sarif --json-file-output=snyk.json
        continue-on-error: true

      - name: 🧪 Run tfsec - Deep IaC Analysis
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          working_directory: terraform/aws
          additional_args: --format sarif --out tfsec.sarif
        continue-on-error: true

      - name: 📦 Upload Snyk Report JSON
        uses: actions/upload-artifact@v2.3.1
        with:
          name: snyk_report_json
          path: snyk.json
        if: always()

      - name: 📦 Upload Snyk Report SARIF
        uses: actions/upload-artifact@v2.3.1
        with:
          name: snyk_report_sarif
          path: snyk.sarif
        if: always()

      - name: 📦 Upload Tfsec Report
        uses: actions/upload-artifact@v2.3.1
        with:
          name: tfsec_report
          path: tfsec.sarif
        if: always()

      - name: 📦 Upload Checkov Report
        uses: actions/upload-artifact@v2.3.1
        with:
          name: checkov_report
          path: checkov.sarif
        if: always()

      - name: 🔧 Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: 🌍 Terraform Init
        run: terraform init
        working-directory: terraform/aws
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: 📊 Terraform Plan
        run: terraform plan -var="trusted_ip=${{ secrets.TRUSTED_IP }}" -var="vpc_id=${{ secrets.EXISTING_VPC_ID }}"
        working-directory: terraform/aws
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: 🚀 Terraform Apply
        run: terraform apply -auto-approve -var="trusted_ip=${{ secrets.TRUSTED_IP }}" -var="vpc_id=${{ secrets.EXISTING_VPC_ID }}"
        working-directory: terraform/aws
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
