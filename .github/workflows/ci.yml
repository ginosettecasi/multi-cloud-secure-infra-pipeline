name: Multi-Cloud Secure IaC Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  terraform-aws:
    name: üöÄ Deploy AWS Infrastructure
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      - name: üìÅ Ensure reports folder exists
        run: mkdir -p terraform/aws/reports

      - name: üß™ Run Checkov - IaC Security Scan
        uses: bridgecrewio/checkov-action@master
        with:
          directory: terraform/aws
          output_format: sarif
          output_file_path: terraform/aws/reports/checkov.sarif
        continue-on-error: true

      - name: üß™ Run Snyk IaC Scan
        uses: snyk/actions/iac@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          file: terraform/aws
          args: >-
            --severity-threshold=medium
            --sarif-file-output=terraform/aws/reports/snyk.sarif
            --json-file-output=terraform/aws/reports/snyk.json
        continue-on-error: true

      - name: üß™ Run tfsec - Deep IaC Analysis
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          working_directory: terraform/aws
          additional_args: --format sarif --out terraform/aws/reports/tfsec.sarif
        continue-on-error: true

      - name: üîß Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: üåç Terraform Init
        run: terraform init
        working-directory: terraform/aws
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: üìä Terraform Plan
        run: terraform plan -var="trusted_ip=${{ secrets.TRUSTED_IP }}" -var="vpc_id=${{ secrets.EXISTING_VPC_ID }}"
        working-directory: terraform/aws
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: üöÄ Terraform Apply
        run: terraform apply -auto-approve -var="trusted_ip=${{ secrets.TRUSTED_IP }}" -var="vpc_id=${{ secrets.EXISTING_VPC_ID }}"
        working-directory: terraform/aws
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: üöÄ Commit Reports to Branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin
          if git show-ref --quiet refs/heads/security-reports; then
            git checkout security-reports
          else
            git checkout --orphan security-reports
            git reset --hard
          fi
          mkdir -p reports
          cp -r terraform/aws/reports/* reports/ || echo "No reports found to copy"
          git add reports/
          git commit -m "üîê Add latest security scan reports" || echo "No changes to commit"
          git push origin security-reports
